ambiguous_custom_block_signature=Scratch l\u00E4sst es zu, dass du mehrere eigene Bl\u00F6cke mit demselben Namen erstellst. Das Programm kann anschlie\u00DFend nicht mehr zwischen den einzelnen Bl\u00F6cken unterscheiden. Verwende f\u00FCr eigene Bl\u00F6cke immer eindeutige Namen.
ambiguous_parameter_name_unused=Scratch l\u00E4sst es zu, dass du die Eingabefelder von eigenen Bl\u00F6cken gleich benennst. Das Programm kann anschlie\u00DFend nicht mehr zwischen den einzelnen Parametern unterscheiden. Verwende f\u00FCr Eingabefelder immer eindeutige Namen.
ambiguous_parameter_name_used=Scratch l\u00E4sst es zu, dass du die Eingabefelder von eigenen Bl\u00F6cken gleich benennst. Verwende f\u00FCr Eingabefelder unbedingt eindeutige Namen.
backdrop_switch=Gut gemacht! Du hast nutzt den Wechsel zu einem anderen B\u00FChnenbild auch um andere Skripte zu starten. Somit kannst du passende Aktionen je nach B\u00FChne ausf\u00FChren.
blocking_if_else=Du verwendest einen [sbi]stoppe [alles v][/sbi] oder [sbi]stoppe [dieses Skript v][/sbi] Baustein sowohl im [IF] als auch im [ELSE] Zweig dieses Bausteins. Das Skript terminiert also in jedem Fall und die Bl\u00F6cke nach dem [sbi]falls < > dann[/sbi] Baustein werden nie ausgef\u00FChrt. Verwende nur in einem Zweig einen [sbi]stoppe [ v][/sbi] Baustein oder l\u00F6sche alle Bausteine nach dem [sbi]falls < > dann[/sbi].
blocking_if_else_inside_loop=Du verwendest einen [sbi]stoppe [alles v][/sbi] oder [sbi]stoppe [dieses Skript v][/sbi] Baustein sowohl im [IF] als auch im [ELSE] Zweig dieses Bausteins. Das Skript terminiert also in jedem Fall und die Wiederholung au\u00DFerhalb des [sbi]falls < > dann[/sbi] Bausteins wird nie richtig ausgef\u00FChrt. Verwende nur in einem Zweig einen [sbi]stoppe [ v][/sbi] Baustein oder entferne die Wiederholung.
boolean_expression=Super! Du verwendest Boolsche Ausdr\u00FCcke in deinem Program.
busy_waiting_all=In deinem Skript wird immer wieder die Bedingung \u00FCberpr\u00FCft, nur um bei positiver Auswertung alles zu beenden. Verwende statt Wiederholung und bedingter Anweisung einfach den [sbi]warte bis < >[/sbi] Baustein, um auf den Eintritt der Bedingung zu warten.
busy_waiting_clone=In deinem Skript wird immer wieder die Bedingung \u00FCberpr\u00FCft, nur um bei positiver Auswertung den Klon zu l\u00F6schen. Verwende statt Wiederholung und bedingter Anweisung einfach den [sbi]warte bis < >[/sbi] Baustein, um auf den Eintritt der Bedingung zu warten.
busy_waiting_script=In deinem Skript wird immer wieder die Bedingung \u00FCberpr\u00FCft, nur um bei positiver Auswertung das Skript zu beenden. Verwende statt Wiederholung und bedingter Anweisung einfach den [sbi]warte bis < >[/sbi] Baustein, um auf den Eintritt der Bedingung zu warten.
call_without_definition=Wenn ein eigener Block in Scratch gel\u00F6scht wird, bleiben manchmal Einsatzfragmente zur\u00FCck. Stelle sicher, dass du den eigenen Block an allen Positionen, an denen du ihn verwendest, ebenfalls l\u00F6schst.
clone_type_1=Die identischen Anweisungen existieren in mehreren Scripts. Ein eigener Block k\u00F6nnte den Code vereinfachen.
clone_type_2=Die gleichen Anweisungen, nur mit unterschiedlichen Parametern, existieren in mehreren Skripten. Ein eigener Block k\u00F6nnte den Code vereinfachen.
clone_type_3=\u00C4hnlicher Code existiert in mehreren Skripten. Ein eigener Block k\u00F6nnte den Code vereinfachen.
collision=Gut gemacht! Deine Figur zeigt ein Verhalten, sobald es mit bestimmten Dingen in Ber\u00FChrung kommt.
comparing_literals_default_false=Du vergleichst zwei Texte. Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: [FALSE]. Der Code im [bc]%THENELSE[/bc] Block wird %ALWAYSNEVER ausgef\u00FChrt. Ersetze deinen Vergleich durch etwas Passenderes oder entferne die Kontrollstruktur.
comparing_literals_default_true=Du vergleichst zwei Texte. Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: [TRUE]. Der Code im [bc]%THENELSE[/bc] Block wird %ALWAYSNEVER ausgef\u00FChrt. Der Block ist \u00FCberfl\u00FCssig.
comparing_literals_default_variable=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Deshalb wird der Code im [bc]%THENELSE[/bc] Block %ALWAYSNEVER ausgef\u00FChrt. Wolltest du eine Variable [var]%VARIABLE[/var] im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende den neuen Baustein.
comparing_literals_default_variable_exists=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Deshalb wird der Code im [bc]%THENELSE[/bc] Block %ALWAYSNEVER ausgef\u00FChrt. Wolltest du den Baustein f\u00FCr deine angelegte Variable [var]%VARIABLE[/var] im Vergleich verwenden?
comparing_literals_default_variable_exists_two=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Deshalb wird der Code im [bc]%THENELSE[/bc] Block %ALWAYSNEVER ausgef\u00FChrt. Wolltest du die angelegte Variable [var]%VARIABLE1[/var] oder [var]%VARIABLE2[/var] im Vergleich verwenden?
comparing_literals_default_variable_exists_two_without_information=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Wolltest du die angelegte Variable [var]%VARIABLE1[/var] oder [var]%VARIABLE2[/var] im Vergleich verwenden?
comparing_literals_default_variable_exists_without_information=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Wolltest du den Baustein f\u00FCr deine angelegte Variable [var]%VARIABLE[/var] im Vergleich verwenden?
comparing_literals_default_variable_two=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Deshalb wird der Code im [bc]%THENELSE[/bc] Block %ALWAYSNEVER ausgef\u00FChrt. Wolltest du die Variablen [var]%VARIABLE1[/var] oder [var]%VARIABLE2[/var] im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende die neuen Bausteine.
comparing_literals_default_variable_two_without_information=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Wolltest du die Variablen [var]%VARIABLE1[/var] oder [var]%VARIABLE2[/var] im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende die neuen Bausteine.
comparing_literals_default_variable_without_information=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Wolltest du eine Variable [var]%VARIABLE[/var] im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende den neuen Baustein.
comparing_literals_default_without_information=Du vergleichst zwei Texte. Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Ersetze deinen Vergleich durch etwas Passenderes oder entferne die Kontrollstruktur.
comparing_literals_wait_false=Du vergleichst zwei Texte. Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: [FALSE]. Der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgef\u00FChrt. Ersetze deinen Vergleich durch etwas Passenderes oder entferne die Kontrollstruktur.
comparing_literals_wait_true=Du vergleichst zwei Texte. Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: [TRUE]. Der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgef\u00FChrt. Der Baustein ist \u00FCberfl\u00FCssig.
comparing_literals_wait_variable=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgef\u00FChrt. Wolltest du eine Variable [var]%VARIABLE[/var] im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende den neuen Baustein.
comparing_literals_wait_variable_exists=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgef\u00FChrt. Wolltest du den Baustein f\u00FCr deine angelegte Variable [var]%VARIABLE[/var] im Vergleich verwenden?
comparing_literals_wait_variable_exists_two=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Deshalb wird der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgef\u00FChrt. Wolltest du die angelegte Variable [var]%VARIABLE1[/var] oder [var]%VARIABLE2[/var] im Vergleich verwenden?
comparing_literals_wait_variable_two=Bei deinem Vergleich erh\u00E4ltst du immer dasselbe Ergebnis: %TRUEFALSE%ADDINFODICT. Deshalb wird der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgef\u00FChrt. Wolltest du die Variablen [var]%VARIABLE1[/var] oder [var]%VARIABLE2[/var] im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende die neuen Bausteine.
conditional_inside_loop=Toll! Du fragst wiederholt in einer Wiederholung bestimmte Bedingungen ab, du verschachtelst also zwei wichtige Steuerungsbl\u00F6cke. Damit kannst du auch etwas anspruchsvollere Probleme l\u00F6sen.
controlled_broadcast_or_stop=Gut gemacht! Um mehr Kontrolle \u00FCber dein Programm zu haben, fragst du kontinuierlich, ob bestimmte Bedingungen erf\u00FCllt sind, bevor du eine Nachricht verwendest oder das Programm/Skript stoppst.
coordination=Sehr gut! Du kannst dein Programm und mehrere Skripte bereits gut miteinander koordinieren, das ist f\u00FCr ein gr\u00F6\u00DFeres Program sehr wichtig. Am besten geht es mittels Nachrichten und [bc]Warte bis < >[/bc].
correct_broadcast=Toll gemacht! Du hast eine Kommunikation mit Nachrichten richtig umgesetzt, somit kannst du ganz einfach deine Skripte koordinieren.
custom_block_usage=Sehr gut! Du kannst deinen eigenen Block erstellen und verwendest ihn auch in deinem Programm.
custom_block_with_forever=Wenn du in einem eigenen Block [sbi]wiederhole fortlaufend[/sbi] verwendest, wird dieser Block nie wieder verlassen. Die Befehle, die nach deinem Blockaufruf in einem [bc]anderen Skript[/bc] im Programm stehen, k\u00F6nnen nie ausgef\u00FChrt werden.
custom_block_with_termination=Wenn du in dem eigenen Block [sbi]%METHOD[/sbi] alles stoppst oder den aktuellen Klon l\u00F6schst, werden die Befehle, die nach deinem Blockaufruf von [sbi]%METHOD[/sbi] in einem [bc]anderen Skript[/bc] im Programm stehen, nie ausgef\u00FChrt. Entferne den [sbi]stoppe [alles v][/sbi] oder [sbi]l\u00F6sche diesen Klon[/sbi] Baustein oder verwende einen [sbi]falls < >, dann[/sbi] Baustein, um nicht immer zu stoppen.
dead_code=In deinem Programm befinden sich Bl\u00F6cke, die keinen Ereignisverarbeiter haben. Sie werden niemals ausgef\u00FChrt. Dadurch wird dein Programm un\u00FCbersichtlicher. Du kannst die Bl\u00F6cke l\u00F6schen oder versuchen sie in dein Programm zu integrieren.
delete_clone_in_loop=Dein Programm l\u00F6scht den Klon im ersten Durchgang der Wiederholung. Die Wiederholung ist also \u00FCberfl\u00FCssig und macht dein Programm nur un\u00FCbersichtlicher. Du kannst die Wiederholung entfernen.
directed_motion=Gut gemacht! Deine Figur l\u00E4sst sich auf Tastendruck gef\u00FChrt bewegen, das ist sehr wichtig f\u00FCr die meisten Spiele.
double_if=Dein Programm enth\u00E4lt zwei aufeinanderfolgende bedingte Anweisungen mit derselben Bedingung. \u00DCberlege, ob du diese zu einem Block zusammenfassen kannst, um das Programm k\u00FCrzer und verst\u00E4ndlicher zu machen.
duplicate_sprite=In deinem Programm befinden sich exakte Kopien derselben Figur. Das macht das Programm un\u00FCbersichtlich. Hier k\u00F6nnte man auch einfach Klone erzeugen.
duplicated_script=In deinem Programm befindet sich das gleiche Skript unn\u00F6tigerweise doppelt. Das macht das Programm un\u00FCbersichtlich. Du kannst eines der Skripte l\u00F6schen.
duplicated_scripts_covering=In deinem Programm befindet sich das gleiche Skript unn\u00F6tigerweise doppelt. Au\u00DFerdem liegen die Skripte genau so \u00FCbereinander, dass du nur eines sehen kannst. Dies kann zu unerwartetem Verhalten in deinem Programm f\u00FChren. Du kannst eines der Skripte l\u00F6schen.
empty_control_body=Du hast einen [sbi]%BLOCKNAME[/sbi] verwendet, der keine Bausteine enth\u00E4lt. Dies macht den Code schwieriger zu verstehen. L\u00F6sche den Baustein, falls er nicht weiter verwendet wird.
empty_custom_block=Du hast einen eigenen Block definiert, der keine Bausteine in seiner Definition enth\u00E4lt. Wenn er aufgerufen wird, passiert nichts. L\u00F6sche den eigenen Block, falls er nicht weiter verwendet wird.
empty_project=Das gesamte Projekt ist leer. Fang am besten damit an, eine erste Figur hinzuzuf\u00FCgen.
empty_script=In deiner Figur befindet sich ein Ereignisverarbeiter der keine Bausteine angeh\u00E4ngt hat. Wenn das Ereignis ausgel\u00F6st wird, geschieht nichts. Wenn nichts geschehen soll, kannst du diesen Baustein l\u00F6schen. Wenn doch etwas passieren soll, baue dieses Skript entsprechend weiter.
empty_sprite=Die Figur %SPRITE besitzt keinerlei Skripte. Sie kann auf keine Benutzerinteraktion oder Interaktion mit anderen Figuren reagieren. Wenn das beabsichtigt ist, kannst du das einfach lassen. Wenn nicht solltest du \u00FCberlegen, was die Figur machen soll und daf\u00FCr Skripte in dieser Figur anlegen.
endless_recursion_broadcast=F\u00FChre beim Selbstaufruf eine Bedingung zum Abbruch ein, denn sonst ruft sich das Skript \u00FCber die Nachricht unendlich lange immer wieder selbst auf.
endless_recursion_procedure=F\u00FChre beim Selbstaufruf eine Bedingung zum Abbruch ein, denn sonst ruft sich der eigene Block unendlich lange immer wieder selbst auf.
expression_as_touching_or_color=Der Baustein erwartet als \u00DCbergabewert eine Farbe. Du solltest den eingesetzten Baustein entfernen.
forever_inside_if=Die Endloswiederholung [sbi]wiederhole fortlaufend[/sbi] wird nie verlassen. Alle Bl\u00F6cke, die in diesem Skript, aber au\u00DFerhalb dieser Endloswiederholung sind, also auch alle Bl\u00F6cke nach dem [sbi]falls < >, dann[/sbi], werden so nie ausgef\u00FChrt. Versuche die innere Endloswiederholung wegzulassen.
forever_inside_loop=Die innere Endloswiederholung [sbi]wiederhole fortlaufend[/sbi] wird nie verlassen. Alle Bl\u00F6cke, die in diesem Skript, aber au\u00DFerhalb dieser Endloswiederholung sind, werden so nie wieder ausgef\u00FChrt. Versuche die innere Endloswiederholung wegzulassen.
gliding_motion=Gut gemacht! Deine Figur l\u00E4sst gleitet auf Tastendruck in eine bestimmte Richtung. Dieses Konzept ist f\u00FCr viele Spiele wichtig.
hide_without_show=Dein Programm benutzt einen [sbi]verstecke dich[/sbi] Baustein ohne die Figur wieder sichtbar zu machen. Dadurch k\u00F6nnen keine Ver\u00E4nderungen an der Figur dargestellt werden. Um diese Ver\u00E4nderungen anzeigen zu lassen, musst du einen [sbi]zeige dich[/sbi] Baustein in deinem Programm verwenden.
illegal_parameter_refactor=Der verwendete Parameter besitzt den falschen Typ. Durch das Bearbeiten des eigenen Blocks ist aus dem Parameter mit einem Wahrheitswert ein Parameter mit einem Text oder Nummer geworden. Mache die Bearbeitung r\u00FCckg\u00E4ngig.
immediate_delete_clone_after_broadcast=Das Skript l\u00F6scht den Klon sofort nach dem [sbi]sende (%MESSAGE v) an alle[/sbi] Baustein. Das Skript, das durch die Nachricht ausgel\u00F6st wird und mit dem Baustein [sbi]Wenn ich [%MESSAGE v] empfange[/sbi] beginnt, wird f\u00FCr diesen Klon der Figur %SPRITE nicht mehr richtig abgearbeitet. Du verwendest besser einen [sbi]sende (%MESSAGE v) an alle und warte[/sbi] Baustein.
immediate_stop_after_say_think=Das Skript stoppt alles sofort nach dem [bc]%SAYTHINK[/bc] Baustein. Der Text wird nie angezeigt. Ersetze den [bc]%SAYTHINK[/bc] Baustein durch einen [sbi]%SAYTHINK ( ) f\u00FCr ( ) Sekunden[/sbi] Baustein. Damit der Rest des Programms stoppt, f\u00FCgst du am besten einen [sbi]stoppe [andere Skripte der Figur v][/sbi] Baustein vor dem %SAYTHINK ein.
immediate_stop_after_say_think_multiple=Das Skript stoppt alles sofort nach dem [bc]%SAYTHINK[/bc] Baustein. Der Text wird nie angezeigt. Ersetze den [bc]%SAYTHINK[/bc] Baustein durch einen [sbi]%SAYTHINK ( ) f\u00FCr ( ) Sekunden[/sbi] Baustein. Damit der Rest des Programms stoppt, f\u00FCgst du am besten einen [sbi]stoppe [andere Skripte der Figur v][/sbi] Baustein vor dem %SAYTHINK ein. Wenn du alles andere stoppen m\u00F6chtest, w\u00E4hrend die Figur den [sbi]%SAYTHINK ( ) f\u00FCr ( ) Sekunden[/sbi] Baustein ausf\u00FChrt, musst du au\u00DFerdem andere Figuren mit Hilfe eines [sbi]sende (Nachricht v) an alle[/sbi] Bausteins benachrichtigen, dass auch sie ihre Skripte stoppen sollen.
inappropriate_handler_delete_clone=Das Skript enth\u00E4lt einen [sbi]l\u00F6sche diesen Klon[/sbi] Baustein. Dieser kann aber nicht ausgef\u00FChrt werden, weil im Ereignisverarbeiter nicht klar wird, f\u00FCr welche Klone er gelten soll. Deswegen muss das Skript entweder mit dem [sbi]Wenn ich als Klon entstehe[/sbi] Baustein oder dem [sbi]Wenn diese Figur angeklickt wird[/sbi] Baustein beginnen oder du verschiebst den [sbi]L\u00F6sche diesen Klon[/sbi] Baustein in ein anderes Skript, das mit diesen Ereignisverarbeitern beginnt.
initialisation_of_looks_sprite=Gut gemacht! Du sorgst daf\u00FCr, dass das Aussehen deiner Figur bei Programmstart wieder auf den Anfangszustand zur\u00FCckgesetzt wird.
initialisation_of_looks_stage=Gut gemacht! Du sorgst daf\u00FCr, dass das Aussehen deiner B\u00FChne bei Programmstart wieder auf den Anfangszustand zur\u00FCckgesetzt wird.
initialisation_of_position=Gut gemacht! Du sorgst daf\u00FCr, dass sich deine Figur bei Programmstart wieder am selben Ausgangspunkt befindet.
interrupted_loop_sensing=Der [bc]%BLOCKNAME[/bc] Baustein verhindert w\u00E4hrend seiner Ausf\u00FChrung die \u00DCberpr\u00FCfung der Bedingung im [bc]%THENELSE[/bc] Baustein. Es kann also sein, dass die Bedingung eintritt, aber dein Skript nicht passend reagiert, da es zu diesem Zeitpunkt mit dem '%BLOCKNAME' Baustein besch\u00E4ftigt ist. \u00DCberlege, ob du die Pr\u00FCfung parallel (in einem eigenen Skript) durchf\u00FChren kannst.
key_set_position=Dein Programm setzt jedesmal, wenn du auf die Taste %KEY dr\u00FCckst, die Position der Figur auf einen bestimmten Wert. Wahrscheinlich hast du versucht die Figur um einen bestimmten Wert zu bewegen. Benutze daf\u00FCr den Baustein [sbi]\u00E4ndere %XY um ( )[/sbi].
list_usage=Gut gemacht! Du benutzt eine Liste, somit kannst du bereits mit Kollektionen umgehen.
long_script=Dein Skript ist sehr lang. Versuche, es in mehrere k\u00FCrzere Skripte zu teilen: Teile dein langes Skript so auf, dass jedes k\u00FCrzere Skript f\u00FCr eine Teilaufgabe deines Programms zust\u00E4ndig ist. Dadurch beh\u00E4ltst du den \u00DCberblick.
loop_one=Deine Wiederholung wird nur ein einziges Mal durchlaufen. In diesem Fall ist der Wiederholungsbaustein \u00FCberfl\u00FCssig, du kannst ihn entfernen und die Bausteine im Inneren direkt in dein Skript einf\u00FCgen.
loop_sensing=Gut gemacht! Damit du auch ganz sicher kein Ereignis verpasst, fragst du kontinuierlich nach diesem Ereignis in einer endlosen Wiederholung.
loop_zero=Deine Wiederholung wird nie durchlaufen. In diesem Fall ist der Wiederholungsbaustein \u00FCberfl\u00FCssig, du kannst ihn und die Bausteine im Inneren entfernen.
matching_parameter=Gut! Du wei\u00DFt, dass du deinen Parameter initialisieren solltest bevor du ihn verwendest.
message_naming=Die Nachricht [bc]%MESSAGE[/bc] hat keinen aussagekr\u00E4ftigen Namen. Du verwendest den Standardnamen oder eine Nachricht, die bereits genutzt wird, gefolgt von einer Zahl. Dadurch wird dein Programm schwerer zu verstehen. Verwende aussagekr\u00E4ftige, eindeutige Nachrichten.
message_never_received=Die Nachricht [bc]%MESSAGE[/bc], die hier gesendet wird, wird nie durch einen [sbi]Wenn ich [Nachricht v] empfange[/sbi] Baustein empfangen. Deshalb passiert nichts in Reaktion auf diese Nachricht. Wenn du eine Nachricht sendest, stelle sicher, dass sie auch von einem [bc]passenden Skript[/bc] empfangen wird.
message_never_sent=Die Nachricht [bc]%MESSAGE[/bc], die hier empfangen werden soll, wird nie gesendet. Dieses Skript wird also nie ausgel\u00F6st. Wenn du eine Nachricht empfangen willst, musst du eine Nachricht ausw\u00E4hlen, die in einem [bc]anderen Skript[/bc] bereits versendet wird oder eine neue passende Nachricht in einem [bc]anderen Skript[/bc] versenden.
message_never_sent_say_think=Die Nachricht [bc]%MESSAGE[/bc], die hier empfangen werden soll, wird nie gesendet. Dieses Skript wird also nie ausgel\u00F6st. Du verwendest die Nachricht aber als Text in einem [sbi]%SAYTHINK ( )[/sbi] oder [sbi]%SAYTHINK ( ) f\u00FCr ( ) Sekunden[/sbi] Baustein in den Figuren: %SPRITES. \u00DCberlege, ob du dort zus\u00E4tzlich einen [sbi]sende [%MESSAGE v] an alle[/sbi] Baustein verwenden willst, um alle zu informieren.
message_never_sent_touching=Die Nachricht [bc]%MESSAGE[/bc], die hier empfangen werden soll, wird nie gesendet. Dieses Skript wird also nie ausgel\u00F6st. Du verwendest einen [sbi]wird (%SPRITE v) ber\u00FChrt?[/sbi] Baustein in den Figuren: %SPRITE. Wenn du eine Nachricht \u00FCber diese Ber\u00FChrung an alle versenden willst, dann musst du dazu zus\u00E4tzlich einen [sbi]sende [%MESSAGE v] an alle[/sbi] Baustein verwenden.
middle_man_broadcast=Wenn man auf eine Nachricht wartet, nur um dann gleich eine andere loszuschicken, ist das ein Code Smell. Der Grund daf\u00FCr ist, dass das Skript, das auf die erste Nachricht wartet, eigentlich unn\u00F6tig ist, es ist nur Vermittler zwischen dem originalen Sender und dem finalen Empf\u00E4nger. \u00DCberlege, ob du die Nachricht, auf die das finale Skript wartet, nicht auf die erste gesendete Nachricht umstellen kannst - dann kannst du problemlos das Skript in der Mitte l\u00F6schen, um unn\u00F6tigen Code zu vermeiden.
middle_man_procedure=Wenn man einen eigenen Block aufruft, nur um dann gleich einen [bc]anderen eigenen Block[/bc] aufzurufen, ist das ein Code Smell. Der Grund daf\u00FCr ist, dass das der eigenen Block, der nur einen anderen aufruft, eigentlich unn\u00F6tig ist, er ist nur Vermittler zwischen dem originalen Aufruf und dem finalen eigenen Block. \u00DCberlege, ob du den ersten Aufruf nicht auf den zweiten eigenen Block umstellen kannst - dann kannst du problemlos den eigenen Block in der Mitte l\u00F6schen, um unn\u00F6tigen Code zu vermeiden.
missing_ask=Der [sbi](Antwort)[/sbi] Baustein wird verwendet, aber es wird nie eine Frage gestellt.
missing_backdrop_switch=Wenn du auf einen Wechsel des B\u00FChnenbilds reagieren willst, dieses B\u00FChnenbild aber nie erscheint, wird das Skript nie ausgef\u00FChrt. Stelle sicher, dass du den Wechsel zum B\u00FChnenbild auch anordnen.
missing_clone_call=Wenn du das Element [sbi]Wenn ich als Klon entstehe[/sbi] verwendest, aber die Figur nicht geklont wird, wird das Skript nie ausgef\u00FChrt. Stelle sicher, dass die Figur auch irgendwo geklont wird.
missing_clone_initialization=Wenn du eine Figur klonst, sie aber kein Skript mit [sbi]Wenn ich als Klon entstehe[/sbi] oder [sbi]Wenn diese Figur angeklickt wird[/sbi] enth\u00E4lt, kann der Klon nichts machen. Verwende ein Skript, das mit einem dieser Bausteine beginnt. Du kannst auch den [sbi]hinterlasse Abdruck[/sbi] Baustein der Malstifterweiterung benutzen, wenn der Klon nichts machen soll.
missing_clone_initialization_delete_clone=Wenn du eine Figur klonst, sie aber kein Skript mit [sbi]Wenn ich als Klon entstehe[/sbi] oder [sbi]Wenn diese Figur angeklickt wird[/sbi] enth\u00E4lt, kann der Klon nichts machen. Du verwendest einen [sbi]l\u00F6sche diesen Klon[/sbi] Baustein in einem Skript von %SPRITE. Untersuche, ob du dieses Skript sinnvoller mit dem [sbi]Wenn ich als Klon entstehe[/sbi] oder den [sbi]Wenn diese Figur angeklickt wird[/sbi] Baustein beginnst.
missing_clone_initialization_delete_clone_message=Wenn du eine Figur klonst, diese Figur aber kein Skript mit [sbi]Wenn ich als Klon entstehe[/sbi] oder [sbi]Wenn diese Figur angeklickt wird[/sbi] enth\u00E4lt, kann der Klon nichts machen. Du verwendest einen [sbi]l\u00F6sche diesen Klon[/sbi] Baustein in einem Skript der Figur %SPRITE, das mit dem Empfangen der Nachricht [bc]%MESSAGE[/bc] beginnt. Suche in der Figur %SPRITE nach dem Skript, in dem die Nachricht [bc]%MESSAGE[/bc] versendet wurde. Verwende in diesem Skript statt des vorhandenen Ereignisverarbeiters [bc]%EVENTHANDLER[/bc] den [sbi]Wenn ich als Klon entstehe[/sbi] Baustein oder den [sbi]Wenn diese Figur angeklickt wird[/sbi] Baustein.
missing_clone_initialization_delete_clone_message_multiple=Wenn du eine Figur klonst, diese Figur aber kein Skript mit [sbi]Wenn ich als Klon entstehe[/sbi] oder [sbi]Wenn diese Figur angeklickt wird[/sbi] enth\u00E4lt, kann der Klon nichts machen. Du verwendest einen [sbi]l\u00F6sche diesen Klon[/sbi] Baustein in einem Skript der Figur %SPRITE, das mit dem Empfangen der Nachricht [bc]%MESSAGE[/bc] beginnt. Suche in der Figur %SPRITE nach den Skripten, in denen die Nachricht [bc]%MESSAGE[/bc] versendet wurde. Verwende in diesen Skripten statt der vorhandenen Ereignisverarbeiter [bc]%EVENTHANDLER[/bc] den [sbi]Wenn ich als Klon entstehe[/sbi] Baustein oder den [sbi]Wenn diese Figur angeklickt wird[/sbi] Baustein.
missing_erase_all=Wenn du in Scratch zeichnest, aber nie l\u00F6scht, bleibt die Zeichnung auch bei der n\u00E4chsten Ausf\u00FChrung erhalten. Stelle sicher, dass du zu Beginn des Programms die alten Zeichnungen mit einem [sbi]l\u00F6sche alles[/sbi] Baustein l\u00F6schst.
missing_initialization=In dieser Figur wird %VARIABLE nicht initialisiert bevor der Wert ausgelesen wird, und hat damit beim Start immer den Wert der letzten Ausf\u00FChrung. Initialisiere %VARIABLE, indem du zu Beginn eines [bc]passenden Skripts[/bc] den gew\u00FCnschten Anfangswert zuweist.
missing_initialization_clone=In dieser Figur wird %VARIABLE nicht initialisiert bevor der Wert ausgelesen wird. Initialisiere %VARIABLE, indem du zu Beginn eines [bc]passenden Skripts[/bc] den gew\u00FCnschten Anfangswert zuweist.
missing_loop_mouse_position_direction=Wenn du eine Figur zur Maus drehen willst, willst du das wahrscheinlich \u00FCber die ganze Dauer des Programs machen. Damit das klappt musst du die Drehung immer wieder ausf\u00FChren und nicht nur einmal. Dazu musst du den Drehungsbaustein noch mit einem [sbi]wiederhole fortlaufend[/sbi] Baustein umschlie\u00DFen.
missing_loop_mouse_position_motion=Wenn du eine Figur mit der Maus steuern willst, willst du das wahrscheinlich \u00FCber die ganze Dauer des Programs machen. Damit das klappt musst du die Bewegung immer wieder ausf\u00FChren und nicht nur einmal. Dazu musst du den Bewegungsbaustein noch mit einem [sbi]wiederhole fortlaufend[/sbi] Baustein umschlie\u00DFen.
missing_loop_sensing=Die hervorgehobene Bedingung wird in dem Skript nur einmal \u00FCberpr\u00FCft. Das Skript l\u00E4uft dadurch zu schnell durch. Umschlie\u00DFe die bedingte Anweisung mit dem Baustein [sbi]wiederhole fortlaufend[/sbi], um etwas wiederholt zu \u00FCberpr\u00FCfen.
missing_loop_sensing_variable=Wenn etwas beim Eintritt eines bestimmten Variablenwertes passieren soll, ben\u00F6tigst du eine Wiederholung, damit die \u00DCberpr\u00FCfung kontinuierlich stattfindet. Nutze einen Wiederholungsbaustein.
missing_pen_down=Du hast einen [sbi]schalte Stift aus[/sbi] Baustein verwendet, aber keinen [sbi]schalte Stift ein[/sbi]. Wenn du in Scratch etwas zeichnen willst, vergiss nicht, den [sbi]Schalte Stift ein[/sbi] Baustein zu verwenden.
missing_pen_up=Du hast einen [sbi]schalte Stift ein[/sbi] Baustein verwendet, aber keinen [sbi]schalte Stift aus[/sbi]. Das kann zu ungewollten Linien in der Zeichnung f\u00FChren. Wenn du den Malstift irgendwo einschaltest, stelle sicher, dass er auch wieder ausgeschaltet wird.
missing_resource=Deinem Programm fehlt ein Bild oder ein Ton, den du benutzen willst. W\u00E4hle ein anderes Bild oder einen anderen Ton. Alternativ kannst du auch einen neuen Ton oder ein neues Bild hochladen.
missing_termination=Wird eine Wiederholung verwendet und die Abbruchbedingung vergessen, so f\u00FChrt das Programm die Wiederholung unendlich lang aus. Bl\u00F6cke danach werden nie erreicht. Vergiss nicht, die Abbruchbedingung in deiner Wiederholung einzuf\u00FCgen.
missing_wait_condition=In deinem [sbi]Warte bis < >[/sbi] Baustein fehlt die Bedingung, auf die gewartet werden soll.
mouse_follower=Super! Deine Figur kann dem Mauszeiger folgen. Das kann f\u00FCr einige Spiele ein gutes Konzept sein.
movement_in_loop=Gut gemacht! Die Bewegungen deiner Figur wirken sehr fl\u00FCssig, da du die Bewegung in einer Wiederholung ausf\u00FChrst.
multiple_attribute_modifications=Es gibt mehrere \u00C4nderungen der gleichen Variable oder des gleichen Attributs hintereinander, die zusammengefasst werden k\u00F6nnten.
multiple_attribute_modifications_custom=Es gibt mehrere \u00C4nderungen von %VARIABLE hintereinander, die zusammengefasst werden k\u00F6nnten.
multiple_attribute_modifications_saythink=Es gibt mehrere [sbi]sage ( )[/sbi] oder [sbi]denke ( )[/sbi] Bl\u00F6cke hintereinander ohne Verz\u00F6gerung. Nur wenn du einen [sbi]sage ( ) f\u00FCr ( ) Sekunden[/sbi] oder [sbi]denke ( ) f\u00FCr ( ) Sekunden[/sbi] Block verwendest, wird man die erste Nachricht sehen.
nested_conditional_checks=Sehr gut! Du benutzt verschachtelte Bedingungen, also ineinander verschachtelte [sbi]falls < >, dann[/sbi]. Damit kannst du auch etwas anspruchsvollere Probleme l\u00F6sen.
nested_loops=Verschachtle keine Wiederholungen ineinander, denn das kann zu unerwarteten Problemen f\u00FChren. Versuche nicht notwendige Wiederholungen wegzulassen.
nested_loops_perfume=Sehr gut! Du benutzt ineinander verschachtelte Wiederholungen. Damit kannst du auch etwas anspruchsvollere Probleme l\u00F6sen.
no_working_scripts=Deine Figur enth\u00E4lt nur lose Bl\u00F6cke und Ereignisbausteine. Verbinde den Ereignisbaustein mit deinem restlichen Bl\u00F6cken damit die Figur auf die Ereignisse reagieren kann.
object_follower=Super! Deine Figur kann anderen Objekten folgen. Das kann f\u00FCr einige Spiele ein gutes Konzept sein.
orphaned_parameter=Wenn du bei deinem eigenen Block ein Eingabefeld nachtr\u00E4glich l\u00F6schst, stelle sicher, dass du alle Verwendungen des Eingabefeldes auch l\u00F6schst.
parallelisation=Toll! Du startest mindestens zwei Skripte durch das selbe Ereignis. Das Konzept von Parallelisierung kannst du somit bereits gut umsetzen.
parameter_out_of_scope=Den Wert eines Eingabefelds kannst du lediglich innerhalb eines eigenen Blocks verwenden.
position_equals_check=Die Position einer Figur in Scratch beschreibt ihren Mittelpunkt. Es ist sehr unwahrscheinlich, dass die %COORDINATE Koordinate eines Objekts den genauen Wert des Vergleichs annimmt. Benutze stattdessen eine passende N\u00E4herung mit [LEQ] bzw. [GEQ].
position_equals_check_dist=Die Position einer Figur in Scratch beschreibt ihren Mittelpunkt. Es ist sehr unwahrscheinlich, dass die Entfernung zweier Objekte den genauen Wert des Vergleichs annimmt. Benutze stattdessen eine passende N\u00E4herung mit [LEQ] bzw. [GEQ].
position_equals_check_zero_mouse=Die Entfernung einer Figur zum Mauszeiger in Scratch von Mittelpunkt zu Mittelpunkt gemessen. Es ist sehr unwahrscheinlich, dass die Mittelpunkte beider Objekte jemals exakt \u00FCbereinander liegen. Entferne das [EQ] und benutze stattdessen eine passende N\u00E4herung mit [LEQ] oder verwende einen ber\u00FChren-Baustein [sbi]wird ( v) ber\u00FChrt?[/sbi], [sbi]wird Farbe [#11ff33] ber\u00FChrt?[/sbi], [sbi]Farbe [#11ff33] ber\u00FChrt [#11ff33]?[/sbi] aus dem Bereich F\u00FChlen.
position_equals_check_zero_sprites=Die Entfernung zweier Figuren wird in Scratch von Mittelpunkt zu Mittelpunkt gemessen. Es ist sehr unwahrscheinlich, dass die Mittelpunkte zweier Figuren jemals exakt \u00FCbereinander liegen. Entferne das [EQ] und benutze stattdessen eine passende N\u00E4herung mit [LEQ] oder verwende einen ber\u00FChren-Baustein [sbi]wird ( v) ber\u00FChrt?[/sbi], [sbi]wird Farbe [#11ff33] ber\u00FChrt?[/sbi], [sbi]Farbe [#11ff33] ber\u00FChrt [#11ff33]?[/sbi] aus dem Bereich F\u00FChlen.
recursive_cloning=Ein Klon sollte keine weiteren Klone von sich selbst erzeugen, da sonst im schlimmsten Fall unendlich viele Klone entstehen.
same_variable_different_sprite=Der gleiche Variablenname wird in mehreren Figuren verwendet. Das kann Verwirrung erzeugen. Stelle sicher eindeutige Namen zu verwenden.
say_sound_synchronisation=Toll gemacht! Um deine Figur sprechen zu lassen, spielst du einen Klang genau zur gleichen Zeit ab, in der deine Figur auch in einer Sprechblase redet. Das ist ein tolles Feature.
sequential_actions=Das Programm enth\u00E4lt wiederholt eine Sequenz gleicher Anweisungen. Man k\u00F6nnte das Programm mit einer Wiederholung vereinfachen.
sprite_naming=Die Figur %SPRITE hat keinen aussagekr\u00E4ftigen Namen, sondern den Namen einer anderen Figur gefolgt von einer Zahl. Dadurch wird dein Programm schwerer zu verstehen. Gib deinen Figuren aussagekr\u00E4ftige, eindeutige Namen.
sprite_naming_default=Die Figur %SPRITE hat keinen aussagekr\u00E4ftigen Namen, sondern den Standardnamen. Dadurch wird dein Programm schwerer zu verstehen. Gib deinen Figuren aussagekr\u00E4ftige, eindeutige Namen.
stuttering_movement=Dr\u00FCckt man eine Taste l\u00E4nger, dann erwartet man eine andauernde Ereignisverarbeitung. Leider tritt jedoch eine Verz\u00F6gerung zwischen der ersten und der zweiten Verarbeitung auf, wodurch die Bewegung nicht fl\u00FCssig ist. Du kannst diese Verz\u00F6gerung umgehen, indem du mit dem Baustein [sbi]<Taste (%KEY v) gedr\u00FCckt?>[/sbi] aus der Kategorie F\u00FChlen arbeitest. Dazu musst du die Bedingung [sbi]falls <Taste (%KEY v) gedr\u00FCckt?>, dann[/sbi] innerhalb des Bausteins [sbi]wiederhole fortlaufend[/sbi] \u00FCberpr\u00FCfen und statt des Ereignisverarbeiters [sbi]Wenn Taste [ v] gedr\u00FCckt wird[/sbi] den Ereignisverarbeiter [sbi]Wenn die gr\u00FCne Flagge angeklickt[/sbi] verwenden.
terminated_loop=Die Wiederholung wird unterbrochen (z.B. durch einen Stop-Baustein) und wird gar nicht wiederholt.
timer=Super! Du benutzt eine eigene Variable als eine Art Z\u00E4hler in deiner Wiederholung. Du hast Wiederholungen und den Umgang mit ihnen schon sehr gut verstanden.
type_error=Du vergleichst Werte, die nicht vergleichbar sind.
type_error_weird_distance=Du benutzt einen Baustein in [sbi](Entfernung von ( v))[/sbi], zu dem du keine Entfernung messen kannst. Verwende einen Figurnamen oder die Mauszeiger Option aus den vorgegebenen M\u00F6glichkeiten des [sbi](Entfernung von ( v))[/sbi] Bausteins.
unnecessary_boolean_true=Du vergleichst einen Wahrheitsblock mit dem Wert %VALUE. Du k\u00F6nntest den Wahrheitsblock auch ohne Vergleich verwenden.
unnecessary_boolean_false=Du vergleichst einen Wahrheitsblock mit dem Wert %VALUE. Du k\u00F6nntest den Wahrheitsblock auch ohne Vergleich in ein [sbi]not < >[/sbi] einsetzen.
unnecessary_glide=Du benutzt einen [sbi]gleite in ( ) Sek. zu ( v)[/sbi] Baustein. Da der Zeitwert 0 ist, wird die Bewegung sofort ausgef\u00FChrt. Du kannst stattdessen einen [sbi]gehe zu ( v)[/sbi] Baustein verwenden.
unnecessary_glide_xy=Du benutzt einen [sbi]gleite in ( ) Sek. zu x: ( ) y: ( )[/sbi] Baustein. Da der Zeitwert 0 ist, wird die Bewegung sofort ausgef\u00FChrt. Du kannst stattdessen einen [sbi]gehe zu x: ( ) y: ( )[/sbi] Baustein verwenden.
unnecessary_if=Du benutzt zwei [sbi]falls < >, dann[/sbi] Bausteine nacheinander mit den selben Bl\u00F6cken im Inneren. Du kannst das vereinfachen, indem du einen [sbi]<< > oder < >>[/sbi] Baustein verwendest und die Bedingungen in einem einzelnen [sbi]falls < >, dann[/sbi] Baustein zusammenfasst.
unnecessary_if_after_until=Du benutzt einen [sbi]falls < >, dann[/sbi] Baustein nach einem [sbi]wiederhole bis < >[/sbi] Baustein mit der selben Bedingung. Die Bausteine im Inneren des [sbi]falls < >, dann[/sbi] Bausteins werden immer ausgef\u00FChrt. Du kannst den [sbi]falls < >, dann[/sbi] Baustein l\u00F6schen.
unnecessary_if_after_until_else=Du benutzt einen [sbi]falls < >, dann sonst[/sbi] Baustein nach einem [sbi]wiederhole bis < >[/sbi] Baustein mit der selben Bedingung. Die Bausteine in der oberen H\u00E4lfte des [sbi]falls < >, dann[/sbi] Bausteins werden immer ausgef\u00FChrt. Du kannst den [sbi]falls < >, dann[/sbi] Baustein l\u00F6schen.
unnecessary_message=Du benutzt einen [sbi]sende (%MESSAGE v) an alle[/sbi] Baustein sofort nach einem Ereignisverarbeiter. Du kannst stattdessen einfach die Skripte, die mit [sbi]Wenn ich [%MESSAGE v] empfange[/sbi] beginnen, mit dem gleichen Ereignisverarbeiter starten.
unnecessary_move=Du benutzt einen Bewegungsbaustein, der die Position nicht ver\u00E4ndert, du kannst ihn weglassen.
unnecessary_rotation=Deine Drehung bewirkt keinen Unterschied in der Ausrichtung deiner Figur, du kannst den Baustein weglassen.
unnecessary_say=Du benutzt einen [sbi]sage ( ) f\u00FCr ( ) Sekunden[/sbi] Baustein. Da der Zeitwert 0 ist, hat der Baustein keinen Effekt. Du kannst ihn l\u00F6schen.
unnecessary_size_change=Dein Baustein bewirkt keinen Unterschied auf die Gr\u00F6\u00DFe deiner Figur, du kannst den Baustein weglassen.
unnecessary_stop_script=Du benutzt einen [sbi]stop [this script v][/sbi] Baustein am Ende eines Skripts. Du kannst ihn l\u00F6schen.
unnecessary_think=Du benutzt einen [sbi]denke ( ) f\u00FCr ( ) Sekunden[/sbi] Baustein. Da der Zeitwert 0 ist, hat der Baustein keinen Effekt. Du kannst ihn l\u00F6schen.
unnecessary_wait=Du benutzt einen [sbi]warte ( ) Sekunden[/sbi] Baustein. Da der Wert 0 ist, hat der Baustein keinen Effekt. Du kannst ihn l\u00F6schen.
unused_custom_block=Du hast einen eigenen Block erstellt, den du nirgends verwendest. Das macht das Programm un\u00FCbersichtlich. Du kannst den eigenen Block l\u00F6schen.
unused_parameter=Du hast einen Parameter angelegt, den du nicht im eigenen Block verwendest. Das macht den eignen Block den un\u00FCbersichtlich. Du kannst den Parameter l\u00F6schen.
unused_variables=Du hast eine Variable [var]%VARIABLE[/var] definiert, die du an keiner Stelle deines Projekts verwendest. Das macht das Projekt un\u00FCbersichtlich. L\u00F6sche die Variable [var]%VARIABLE[/var] oder nutze die Bausteine [sbi]setze [%VARIABLE v] auf ( )[/sbi], [sbi]\u00E4ndere [%VARIABLE v] um ( )[/sbi] in deinem Projekt."
unused_variables_list=Du hast eine Liste [var]%VARIABLE[/var] definiert, die du an keiner Stelle deines Projekts verwendest. Das macht das Projekt un\u00FCbersichtlich. L\u00F6sche die Liste [var]%VARIABLE[/var] oder nutze die Bausteine [sbi]f\u00FCge ( ) zu [%VARIABLE v] hinzu[/sbi], [sbi]f\u00FCge ( ) bei ( ) in [%VARIABLE v] ein[/sbi] in deinem Projekt."
useful_position_check=Gut aufgepasst! In Scratch sind die Werte f\u00FCr die X- und Y-Koordinaten sehr genau und mit vielen Nachkommastellen. Einen genauen [EQ] -Abgleich mit solchen Zahlen zu machen, ist problematisch. Hier hast du alles richtig gemacht und nur mit [LEQ] bzw. [GEQ] -Operatoren gearbeitet.
useless_blocks_sprite=Du hast einen Baustein verwendet, der nicht f\u00FCr Figuren gedacht ist. Der Baustein zeigt nur bei Verwendung in der B\u00FChne Wirkung. Du kannst den Baustein also einfach entfernen.
useless_blocks_stage=Du hast einen Baustein verwendet, der nicht f\u00FCr die B\u00FChne gedacht ist. Der Baustein zeigt nur bei Verwendung in Figuren Wirkung. Du kannst den Baustein also einfach entfernen.
valid_termination=Du hast eine Abbruchbedingung in deine Wiederholung eingebaut, somit l\u00E4uft die Wiederholung auch nicht unendlich lange.
variable_as_literal=Du hast den Namen einer Variable als Text verwendet. Wolltest Du eigentlich den Variablen Baustein [var]%VARIABLE[/var] verwenden? [sbVariables]
variable_initialization_race=Die gleiche Variable wird beim gleichen Ereignis an verschiedenen Stellen initialisiert. Wenn Scratch die Reihenfolge der Skripts \u00E4ndert, kann sich das Ergebnis \u00E4ndern. Versuche nur an einer Stelle die Werte zuzuweisen.
waiting_check_stop=Super! Du wartest auf das Eintreten einer Bedingung zur Beendigung deines Programs.
